Viewing the Commit History

$ git log
commit ca82a6dff817ec66f44342007202690a93763949
Author: Scott Chacon <schacon@gee-mail.com>
Date:   Mon Mar 17 21:52:11 2008 -0700
    changed the version number

By default, with no arguments, git log lists the commits made in that repository in reverse chronological order; that is, the most recent commits show up first. 
As you can see, this command lists each commit with its SHA-1 checksum, the author’s name and email, the date written, and the commit message.

One of the more helpful options is -p or --patch, which shows the difference (the patch output) introduced in each commit. You can also limit the number of log 
entries displayed, such as using -2 to show only the last two entries.
$ git log -p -2

This option displays the same information but with a diff directly following each entry. This is very helpful for code review or to quickly browse what happened 
during a series of commits that a collaborator has added. You can also use a series of summarizing options with git log. For example, if you want to see some 
abbreviated stats for each commit, you can use the --stat option:
$ git log --stat

As you can see, the --stat option prints below each commit entry a list of modified files, how many files were changed, and how many lines in those files were added
and removed. It also puts a summary of the information at the end.

$ git log --pretty=oneline  (Ohter options short, full, and fuller)
$ git log --pretty=format:"%h - %an, %ar : %s"

----------------------------------------------------------------------------------------------------------------------------------------------------------------
Useful options for git log --pretty=format lists some of the more useful options that format takes.
%H Commit hash
%h Abbreviated commit hash
%T Tree hash
%t Abbreviated tree hash
%P Parent hashes
%p Abbreviated parent hashes
%an Author name
%ae Author email
%ad Author date (format respects the --date=option)
%ar Author date, relative
%cn Committer name
%ce Committer email
%cd Committer date
%cr Committer date, relative
%s Subject

The author is the person who originally wrote the work, whereas the committer is the person who last applied the work. 

graph option adds a nice little ASCII graph showing your branch and merge history
$ git log --pretty=format:"%h %s" --graph

----------------------------------------------------------------------------------------------------------------------------------------------------------------
Common options to git log
-p                  Show the patch introduced with each commit.
--stat              Show statistics for files modified in each commit.
--shortstat         Display only the changed/insertions/deletions line from the --stat command.
--name-only         Show the list of files modified after the commit information.
--name-status       Show the list of files affected with added/modified/deleted information as well.
--abbrev-commit     Show only the first few characters of the SHA-1 checksum instead of all 40.
--relative-date     Display the date in a relative format (for example, “2 weeks ago”) instead of using the full date format.
--graph             Display an ASCII graph of the branch and merge history beside the log output.
--pretty            Show commits in an alternate format. Options include oneline, short, full, fuller, and format (where you specify your own format).
--oneline           Shorthand for --pretty=oneline --abbrev-commit used together.